<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nIV8Qhul9OXFNVF/CvrqzzKuGIylrNnFSFKlg8kXszp6ctB2Yydy0rQfJhCNZv6cwDW1Ww6gb+nLOVp5
        hmyGn+NP/9oACAECAwE/If8Aw6P/2gAIAQMDAT8h/wDDo//aAAwDAQACEQMRAAAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAggAAAAAAAAAAAAAAAAAAAAAAAAAAEAkAgkAAAAAAAAAA
        AAAAAAAAAAAAAgAAAkgEAAAAAAAAAAAAAAAAAAAAEEEAkEgkgAAAAAAAAAAAAAAAAAAAkEAAAAEkEAAA
        AAAAAAAAAAAAAAAAEAkgAAAAgAAAAAAAAAAAAAAAAAAEAAAAAAAEAgAAAAAAAAAAAAAAAAAAAAAAAAAA
        AEAAAAAAAAAAAAAAAAAAAAAgkEgAAggAAAAAAAAAAAAAAAAAAEAEkkEkAAkAAAAAAAAAAAAAAAAAAAgA
        EAgAAgkAAAAAAAAAAAAAAAAAAAAAEBgkkkoAAAAAAAAAAAAAAAAAAAAEAkAAAgAgAAAAAAAAAAAAAAAA
        AAAAAAAFtttoAAAAAAAAAAAAAAAAAAAAAAkgEAAEgAAAAAAAAAAAAAAAAAAAAAEAAAgAEAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAJItktBBBMNAAAAAAAAAAAAAAAAAABtokhJpNttoAAAAAAAAAAAAAAAAAAIsJktpNNN
        pAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIkAEAspgloAAAAAAAAAAAAAAAAAFJlp
        hIJFNgIAAAAAAAAAAAAAAAAAANBhtJBpJIhgAAAAAAAAAAAAAAAAAggAgAEEgkAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>